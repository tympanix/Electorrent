name: Electorrent Release

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 0 * * 0' # every Sunday at midnight

env:
  NODE_VERSION: 14.x
  ELECTRON_IS_DEV: 0

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        testspec:
          - qbittorrent-4
          - qbittorrent-5
          - qbittorrent-latest
          - rtorrent-latest
          - transmission-latest
          - deluge-1
          - utorrent-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
    - name: Install dependencies
      run: sudo apt-get install xvfb
    - name: Install nodejs
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - name: Cache npm modules
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
    - name: Cache bower modules
      uses: actions/cache@v4
      with:
        path: bower.json
        key: ${{ runner.os }}-${{ hashFiles('bower.json') }}
    - name: Install npm dependencies
      run: npm install
    - name: Build web application
      run: npm run build
    - name: Run tests
      uses: nick-fields/retry@v3
      timeout-minutes: 15
      with:
        max_attempts: 3
        timeout_minutes: 10
        retry_on: error
        command: xvfb-run -a -- npm test -- -g ${{ matrix.testspec }}

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install apt packages
      run: sudo apt-get update && sudo apt-get install -y graphicsmagick icnsutils
      if: runner.os == 'Linux'
    - name: Checkout source code
      uses: actions/checkout@v4
    - name: Install nodejs
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - name: Cache npm modules
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
    - name: Install npm dependencies
      run: npm install
    - name: Build distribution
      run: npm run dist
      if: github.ref != 'refs/heads/master'
    - name: Release artifacts
      if: github.ref == 'refs/heads/master'
      run: npm run release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
